package com.huaao.ejwplatform.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class JwCriminalAppraiseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public JwCriminalAppraiseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCriminalIdIsNull() {
            addCriterion("criminal_id is null");
            return (Criteria) this;
        }

        public Criteria andCriminalIdIsNotNull() {
            addCriterion("criminal_id is not null");
            return (Criteria) this;
        }

        public Criteria andCriminalIdEqualTo(String value) {
            addCriterion("criminal_id =", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdNotEqualTo(String value) {
            addCriterion("criminal_id <>", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdGreaterThan(String value) {
            addCriterion("criminal_id >", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdGreaterThanOrEqualTo(String value) {
            addCriterion("criminal_id >=", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdLessThan(String value) {
            addCriterion("criminal_id <", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdLessThanOrEqualTo(String value) {
            addCriterion("criminal_id <=", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdLike(String value) {
            addCriterion("criminal_id like", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdNotLike(String value) {
            addCriterion("criminal_id not like", value, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdIn(List<String> values) {
            addCriterion("criminal_id in", values, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdNotIn(List<String> values) {
            addCriterion("criminal_id not in", values, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdBetween(String value1, String value2) {
            addCriterion("criminal_id between", value1, value2, "criminalId");
            return (Criteria) this;
        }

        public Criteria andCriminalIdNotBetween(String value1, String value2) {
            addCriterion("criminal_id not between", value1, value2, "criminalId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedIsNull() {
            addCriterion("turning_speed is null");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedIsNotNull() {
            addCriterion("turning_speed is not null");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedEqualTo(Integer value) {
            addCriterion("turning_speed =", value, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedNotEqualTo(Integer value) {
            addCriterion("turning_speed <>", value, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedGreaterThan(Integer value) {
            addCriterion("turning_speed >", value, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedGreaterThanOrEqualTo(Integer value) {
            addCriterion("turning_speed >=", value, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedLessThan(Integer value) {
            addCriterion("turning_speed <", value, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedLessThanOrEqualTo(Integer value) {
            addCriterion("turning_speed <=", value, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedIn(List<Integer> values) {
            addCriterion("turning_speed in", values, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedNotIn(List<Integer> values) {
            addCriterion("turning_speed not in", values, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedBetween(Integer value1, Integer value2) {
            addCriterion("turning_speed between", value1, value2, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andTurningSpeedNotBetween(Integer value1, Integer value2) {
            addCriterion("turning_speed not between", value1, value2, "turningSpeed");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyIsNull() {
            addCriterion("processing_efficiency is null");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyIsNotNull() {
            addCriterion("processing_efficiency is not null");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyEqualTo(Integer value) {
            addCriterion("processing_efficiency =", value, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyNotEqualTo(Integer value) {
            addCriterion("processing_efficiency <>", value, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyGreaterThan(Integer value) {
            addCriterion("processing_efficiency >", value, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyGreaterThanOrEqualTo(Integer value) {
            addCriterion("processing_efficiency >=", value, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyLessThan(Integer value) {
            addCriterion("processing_efficiency <", value, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyLessThanOrEqualTo(Integer value) {
            addCriterion("processing_efficiency <=", value, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyIn(List<Integer> values) {
            addCriterion("processing_efficiency in", values, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyNotIn(List<Integer> values) {
            addCriterion("processing_efficiency not in", values, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyBetween(Integer value1, Integer value2) {
            addCriterion("processing_efficiency between", value1, value2, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andProcessingEfficiencyNotBetween(Integer value1, Integer value2) {
            addCriterion("processing_efficiency not between", value1, value2, "processingEfficiency");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultIsNull() {
            addCriterion("feedback_result is null");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultIsNotNull() {
            addCriterion("feedback_result is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultEqualTo(Integer value) {
            addCriterion("feedback_result =", value, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultNotEqualTo(Integer value) {
            addCriterion("feedback_result <>", value, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultGreaterThan(Integer value) {
            addCriterion("feedback_result >", value, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultGreaterThanOrEqualTo(Integer value) {
            addCriterion("feedback_result >=", value, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultLessThan(Integer value) {
            addCriterion("feedback_result <", value, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultLessThanOrEqualTo(Integer value) {
            addCriterion("feedback_result <=", value, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultIn(List<Integer> values) {
            addCriterion("feedback_result in", values, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultNotIn(List<Integer> values) {
            addCriterion("feedback_result not in", values, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultBetween(Integer value1, Integer value2) {
            addCriterion("feedback_result between", value1, value2, "feedbackResult");
            return (Criteria) this;
        }

        public Criteria andFeedbackResultNotBetween(Integer value1, Integer value2) {
            addCriterion("feedback_result not between", value1, value2, "feedbackResult");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated do_not_delete_during_merge Thu May 11 12:02:13 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jw_criminal_appraise
     *
     * @mbggenerated Thu May 11 12:02:13 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}